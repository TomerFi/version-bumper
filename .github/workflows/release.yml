---
name: Release

on:
  workflow_dispatch:
    inputs:
      title:
        description: "Release title"
        required: false
      tweet:
        description: "Tweet new release?"
        required: false
        default: "no"

env:
  PLATFORMS: linux/amd64,linux/arm/v7,linux/arm64/v8

jobs:
  release:
    runs-on: ubuntu-latest
    environment: deployment
    name: Build, publish, release, and announce
    steps:
      - name: Source checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2.0.0

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2.0.0

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('Dockerfile', '.dockerignore') }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Setup Node
        uses: actions/setup-node@v3.2.0
        with:
          node-version: 16

      - name: Install global node modules
        run: >
          npm i -g
          conventional-changelog-cli
          conventional-changelog-conventionalcommits
          conventional-recommended-bump
          git-semver-tags

      - name: Eat own dogfood
        id: version_info
        run: echo "::set-output name=next_version::$(bash entrypoint.sh | cut -f1 -d' ')"

      - name: Get current date
        id: current_date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Build images and push to Docker Hub
        uses: docker/build-push-action@v3.0.0
        with:
          context: .
          push: true
          platforms: ${{ env.PLATFORMS }}
          tags: |
            tomerfi/version-bumper:latest
            tomerfi/version-bumper:${{ steps.version_info.outputs.next_version }}
          build-args: |
            VCS_REF=${{ github.sha }}
            BUILD_DATE=${{ steps.current_date.outputs.date }}
            VERSION=${{ steps.version_info.outputs.next_version }}
          cache-from: |
            type=local,src=/tmp/.buildx-cache
            ghcr.io/tomerfi/version-bumper:early-access
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Create a release name
        id: release_name
        uses: actions/github-script@v6
        with:
          script: |
            var retval = '${{ steps.version_info.outputs.next_version }}'
            if ('${{ github.event.inputs.title }}') {
              retval = retval.concat(' - ${{ github.event.inputs.title }}')
            }
            core.setOutput('value', retval)

      - name: Create a release
        id: gh_release
        uses: actions/github-script@v6
        with:
          script: |
            const repo_name = context.payload.repository.full_name
            const response = await github.request('POST /repos/' + repo_name + '/releases', {
              tag_name: '${{ steps.version_info.outputs.next_version }}',
              name: '${{ steps.release_name.outputs.value }}',
              generate_release_notes: true
            })
            core.setOutput('html_url', response.data.html_url)

      - name: Tweet new release
        if: ${{ github.event.inputs.tweet == 'yes' }}
        uses: lazy-actions/tweet-action@1.0.1
        with:
          oauth_consumer_key: ${{ secrets.TWITTER_API_KEY }}
          oauth_consumer_secret: ${{ secrets.TWITTER_API_SECRET_KEY }}
          oauth_token: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          oauth_token_secret: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
          message: |
            ðŸš€ðŸŽ‰ Version Bumper ${{ steps.version_info.outputs.next_version   }} has been released! ðŸŽ‰ðŸš€
            ${{ steps.gh_release.outputs.html_url}}

            #version_bumper #semver
